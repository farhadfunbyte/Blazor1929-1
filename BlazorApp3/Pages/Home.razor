@page "/"

@inject IJSRuntime jSRuntime
@inject SweetAlertService Swal;
@inject NavigationManager navigationManager

<PageTitle>خانه</PageTitle>

<h1>Hello</h1>

<input class="btn btn-danger" type="button" value="Test" @onclick="AddItem" />

<CascadingValue Name="FirstParameter" Value="@cParam">
    <CascadingValue Name="FirstParameter2" Value="@cParam2">

        <PersonList People="people" Delete="Delete" />

    </CascadingValue>
</CascadingValue>

@code {


    private int a = 1;
    private List<Person> people;

    private string cParam = "پارامتر آبشاری یک";
    private string cParam2 = "پارامتر آبشاری دو";


    protected override async Task OnInitializedAsync()
    {
        //در تسک از این دستور استفاده نشود
        //System.Threading.Thread.Sleep(5000);

        await Task.Delay(5000);
        people =
            [
                new Person() { Id = 1, Name = "<b>aaaa<b>", Family = "bbbb" },
                new Person() { Id = 2, Name = "<i>ccccc<i>", Family = "dddd" },
                new Person() { Id = 3, Name = "<u>eeeeee</u>", Family = "fffff" }
            ];

    }


    private async Task AddItem()
    {
        //alert("Hello! I am an alert box!!");
        //await jSRuntime.InvokeVoidAsync("sweet_alert", "Test Alert!", "AAAAAAA", "success");
        //await jSRuntime.InvokeVoidAsync("Swal.fire", "Test Alert!", "AAAAAAA", "success");

        await Swal.FireAsync("Oops...", navigationManager.Uri, "error");


        Console.WriteLine("Item Added!");
        a++;


        navigationManager.NavigateTo("/weather");

    }

    private async Task Delete(Person person)
    {
        //bool result = await jSRuntime.InvokeAsync<bool>("test_confirm", "آیا حذف شود!");

        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you sure?",
                Text = "You will not be able to recover this imaginary file!",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes, delete it!",
                CancelButtonText = "No, keep it",
                Backdrop = true,
            });


        if (result.IsConfirmed == true)
        {
            people.Remove(person);
        }




    }


}

